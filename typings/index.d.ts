declare module 'discord.js' {
  interface ClientEvents {
    guildChannelPermissionsUpdate: [GuildChannel, PermissionOverwrites, PermissionOverwrites];
    guildChannelTopicUpdate: [GuildChannel, string, string];
    unhandledGuildChannelUpdate: [GuildChannel, GuildChannel];
    guildMemberBoost: [GuildMember];
    guildMemberUnboost: [GuildMember];
    guildMemberRoleAdd: [GuildMember, Role];
    guildMemberRoleRemove: [GuildMember, Role];
    guildMemberNicknameUpdate: [GuildMember, string, string];
    unhandledGuildMemberUpdate: [GuildMember, GuildMember];
    guildBoostLevelUp: [Guild, number, number];
    guildBoostLevelDown: [Guild, number, number];
    guildRegionUpdate: [Guild, string, string];
    guildBannerAdd: [Guild, string];
    guildAfkChannelAdd: [Guild, string];
    guildVanityURLAdd: [Guild, string];
    guildVanityURLRemove: [Guild, string];
    guildVanityURLUpdate: [Guild, string, string];
    guildFeaturesUpdate: [Guild, Guild];
    guildAcronymUpdate: [Guild, Guild];
    guildOwnerUpdate: [Guild, Guild];
    guildPartnerAdd: [Guild];
    guildPartnerRemove: [Guild];
    guildVerificationAdd: [Guild];
    guildVerificationRemove: [Guild];
    unhandledGuildUpdate: [Guild, Guild];
    messagePinned: [Message];
    messageContentEdited: [Message, string, string];
    unhandledMessageUpdate: [Message, Message];
    guildMemberOffline: [GuildMember, Status];
    guildMemberOnline: [GuildMember, Status];
    unhandledPresenceUpdate: [Presence, Presence];
    rolePositionUpdate: [Role, number, number];
    rolePermissionsUpdate: [Role, number, number];
    unhandledRoleUpdate: [Role, Role];
    userAvatarUpdate: [User, string, string];
    userUsernameUpdate: [User, string, string];
    userDiscriminatorUpdate: [User, string, string];
    userFlagsUpdate: [User, string, string];
    unhandledUserUpdate: [User, User];
    voiceChannelJoin: [GuildMember, VoiceChannel];
    voiceChannelLeave: [GuildMember, VoiceChannel];
    voiceChannelSwitch: [GuildMember, VoiceChannel, VoiceChannel];
    voiceChannelMute: [GuildMember, boolean];
    voiceChannelUnmute: [GuildMember, boolean];
    voiceChannelDeaf: [GuildMember, boolean];
    voiceChannelUndeaf: [GuildMember, boolean];
    voiceStreamingStart: [GuildMember, VoiceChannel];
    voiceStreamingStop: [GuildMember, VoiceChannel];
    unhandledVoiceStateUpdate: [VoiceState, VoiceState];
  }
}
